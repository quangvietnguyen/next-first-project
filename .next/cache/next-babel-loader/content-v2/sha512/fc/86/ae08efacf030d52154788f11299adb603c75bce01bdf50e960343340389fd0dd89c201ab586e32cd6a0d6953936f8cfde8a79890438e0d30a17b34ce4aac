{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/vietqnguyen/Desktop/React/18-next-first-project/pages/index.js\";\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  // },[]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a list of React meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n} // export async function getServerSideProps(context) {\n//     //fetch data from an api\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n\n\nexport async function getStaticProps(props) {\n  // fetch data from an api\n  const client = await MongoClient.connect('mongodb+srv://nextjs:Nexaple92!@cluster0.mbvol.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/18-next-first-project/pages/index.js"],"names":["Head","MeetupList","MongoClient","Fragment","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB;AACA;AACA;AACA;AAEA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,C,CAGD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,CAA8BF,KAA9B,EAAqC;AACxC;AAEA,QAAMG,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,gGAApB,CAArB;AACI,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEJ,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADc;AAE5BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFY;AAG5BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHc;AAI5BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAED,eAAepB,QAAf","sourcesContent":["import Head from 'next/head';\n\nimport MeetupList from '../components/meetups/MeetupList';\n\nimport { MongoClient } from 'mongodb';\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n    // const [loadedMeetups, setLoadedMeetups] = useState([]);\n    // useEffect(() => {\n    //     setLoadedMeetups(DUMMY_MEETUPS);\n    // },[]);\n\n    return (\n        <Fragment>\n            <Head>\n                <title>React Meetups</title>\n                <meta \n                    name='description'\n                    content='Browse a list of React meetups!'\n                />\n            </Head>\n            <MeetupList meetups={props.meetups}/>\n        </Fragment>\n    )\n}\n\n\n// export async function getServerSideProps(context) {\n//     //fetch data from an api\n//     const req = context.req;\n//     const res = context.res;\n\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n\nexport async function getStaticProps(props) {\n    // fetch data from an api\n\n    const client = await MongoClient.connect('mongodb+srv://nextjs:Nexaple92!@cluster0.mbvol.mongodb.net/meetups?retryWrites=true&w=majority');\n        const db = client.db();\n\n        const meetupsCollection = db.collection('meetups');\n\n        const meetups = await meetupsCollection.find().toArray();\n\n        client.close();\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString()\n            }))\n        },\n        revalidate: 1\n    };\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}